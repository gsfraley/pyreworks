name: Cont-Integration/Cont-Delivery Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        subcrate: [common, devices/g560-driver, ctl]
      max-parallel: 1
    steps:
    - name: Check-out repository code
      uses: actions/checkout@v4
    - name: Log-in to crates.io
      if: ${{ github.ref == 'refs/heads/main' }}
      run: cargo login ${{secrets.CARGO_REGISTRY_TOKEN}}
    - name: Build ${{matrix.subcrate}}
      run: cd ${{matrix.subcrate}} && cargo build --verbose
    - name: Run tests for ${{matrix.subcrate}}
      run: cd ${{matrix.subcrate}} && cargo test --verbose
    - name: Publish ${{matrix.subcrate}}
      if: ${{ github.ref == 'refs/heads/main' }}
      run: cd ${{matrix.subcrate}} && cargo publish --verbose
  release:
    runs-on: ubuntu-latest
    #if: ${{ github.ref == 'refs/heads/main' }}
    needs: [build-publish]
    steps:
    - name: Check-out repository code
      uses: actions/checkout@v4
    - name: Set facts
      id: set_facts
      run: |-
        echo -n "::set-output name=build-full-name::"
        echo "pyrectl-${{runner.os}}-${{runner.arch}}" | tr '[:upper:]' '[:lower:]'

        echo -n "::set-output name=build-version-ctl::"
        cargo metadata --format-version=1 | jq -r '.packages | map(select(.name == "pyreworks-ctl")) | .[0].version'
    - name: Build ${{matrix.subcrate}} release binary
      run: |-
        cd ctl && cargo build --release --verbose \
          && cp target/release/pyrectl \
                target/release/${{steps.set_facts.outputs.build-full-name}}
    - name: Create GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{steps.set_facts.outputs.build-version-ctl}}
        artifacts: ctl/target/release/${{steps.set_facts.outputs.build-full-name}}

