name: Cont-Integration/Cont-Delivery Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Check-out repository code
      uses: actions/checkout@v4
    - name: Run tests
      run: cargo test --verbose

  publish:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [test]
    steps:
    - name: Check-out repository code
      uses: actions/checkout@v4
    - name: Log-in to crates.io
      run: cargo login ${{secrets.CARGO_REGISTRY_TOKEN}}
    - name: Publish crates
      run: cargo publish --verbose

  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [test]
    steps:
    - name: Check-out repository code
      uses: actions/checkout@v4
    - name: Set facts
      id: set_facts
      run: |-
        echo -n "::set-output name=build-full-name::"
        echo "pyrectl-${{runner.os}}-${{runner.arch}}" | tr '[:upper:]' '[:lower:]'

        echo -n "::set-output name=build-version-ctl::"
        cd ctl && cargo metadata --format-version=1 | jq -r '.packages | map(select(.name == "pyreworks-ctl")) | .[0].version'
    - name: Build release binary
      run: |-
        cargo build --release --verbose \
          && cp target/release/pyrectl \
                target/release/${{steps.set_facts.outputs.build-full-name}}
    - name: Create GitHub release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{steps.set_facts.outputs.build-version-ctl}}
        artifacts: target/release/${{steps.set_facts.outputs.build-full-name}}
